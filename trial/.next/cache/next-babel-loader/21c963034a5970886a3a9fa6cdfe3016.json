{"ast":null,"code":"var _jsxFileName = \"/Users/saahil/Desktop/-/projects/udemy-react-course/Next_tut/trial/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\n\nconst Post = ({\n  id,\n  comments\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }\n}, \"Comments for post #\", this.props.id), comments.map(c => __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, c.email)));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const data = res.data;\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/saahil/Desktop/-/projects/udemy-react-course/Next_tut/trial/pages/post.js"],"names":["axios","Post","id","comments","props","map","c","email","getInitialProps","query","res","get","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB,KAAKC,KAAL,CAAWF,EAAnC,CAFJ,EAGKC,QAAQ,CAACE,GAAT,CAAaC,CAAC,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,CAAC,CAACC,KAAN,CADD,CAHL,CADF;;AAUAN,IAAI,CAACO,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAMC,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACA,yCAAYH,KAAZ;AAAmBN,IAAAA,QAAQ,EAACS;AAA5B;AACD,CAJD;;AAKA,eAAeX,IAAf","sourcesContent":["import axios from \"axios\";\n\n\nconst Post = ({id, comments}) => (\n  <div>\n\n      <h1>Comments for post #{this.props.id}</h1>\n      {comments.map(c => (\n        <p>{c.email}</p>\n      ))}\n  </div>\n);\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const data = res.data;\n  return { ...query, comments:data };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}