{"ast":null,"code":"var _jsxFileName = \"/Users/saahil/Desktop/-/projects/udemy-react-course/Next_tut/trial/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst Post = props => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }\n}, \"Comments for posts #\", props.id));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const data = res.data;\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/saahil/Desktop/-/projects/udemy-react-course/Next_tut/trial/pages/post.js"],"names":["Post","props","id","getInitialProps","query","res","axios","get","data","comments"],"mappings":";;;;;;;;;;AAAA,MAAMA,IAAI,GAAGC,KAAK,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyBA,KAAK,CAACC,EAA/B,CADF,CADF;;AAMAF,IAAI,CAACG,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAMC,IAAI,GAAGH,GAAG,CAACG,IAAjB;AACA,yCAAYJ,KAAZ;AAAmBK,IAAAA,QAAQ,EAACD;AAA5B;AACD,CAJD;;AAKA,eAAeR,IAAf","sourcesContent":["const Post = props => (\n  <div>\n    <h1>Comments for posts #{props.id}</h1>\n  </div>\n);\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const data = res.data;\n  return { ...query, comments:data };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}